Used two approaches:

By sorting and comparing:

int findDuplicate(vector<int>& nums) {
          sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-1;i++){
            if(nums[i]==nums[i+1])return nums[i];
}
        return -1;
        
        
 By marking visited array:
 
 class Solution {
public:
    int findDuplicate(vector<int>& nums) {
         for(int i=0;i<nums.size();i++){
             
             if(nums[abs(nums[i])]<0) return abs(nums[i]);
             else nums[abs(nums[i])]=-(nums[abs(nums[i])]);

             
         }
        return 0;
    }
};


compexity:O(n) time and O(1) space
